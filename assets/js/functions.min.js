/*
|------------------------------------------------------------
| Verifica si un color es oscuro
|------------------------------------------------------------
*/

function is_dark(color) {
	var r, g, b, hsp;
	if (color.match(/^rgb/)) {
		color = color.match(/^rgba?\((\d+),\s*(\d+),\s*(\d+)(?:,\s*(\d+(?:\.\d+)?))?\)$/);
		r = color[1];
		g = color[2];
		b = color[3];
	} else {
		color = +('0x' + color.slice(1).replace(color.length < 5 && /./g, '$&$&'));
		r = color >> 16;
		g = color >> 8 & 255;
		b = color & 255;
	}
	hsp = Math.sqrt(0.299 * (r * r) + 0.587 * (g * g) + 0.114 * (b * b));
	if (hsp > 176) {
		return false;
	} else {
		return true;
	}
}

/*
|------------------------------------------------------------
| Obtiene la direccion de una libreria
|------------------------------------------------------------
*/

function clear(text) {
	var text = text.toLowerCase();
	text = text.replace(/[áàäâå]/, 'a');
	text = text.replace(/[éèëê]/, 'e');
	text = text.replace(/[íìïî]/, 'i');
	text = text.replace(/[óòöô]/, 'o');
	text = text.replace(/[úùüû]/, 'u');
	text = text.replace(/[ýÿ]/, 'y');
	text = text.replace(/[ñ]/, 'n');
	text = text.replace(/[ç]/, 'c');
	/*text = text.replace(/['"]/, '');
	text = text.replace(/[^a-zA-Z0-9-]/, ''); 
	text = text.replace(/\s+/, '-');
	text = text.replace(/' '/, '-');
	text = text.replace(/(_)$/, '');
	text = text.replace(/^(_)/, '');*/
	return text;
}

/*
|------------------------------------------------------------
| Obtiene los parametros de una direccion
|------------------------------------------------------------
*/

function params(path) {
	path = $.trim(path);
	if (/^\?(\/[a-z0-9-]+){2,}$/.test(path)) {
		path = path.split('/');
		path.shift();
		path.shift();
		path.shift();
	} else {
		path = [];
	}
	return path;
}